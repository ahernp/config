---
# Setup local PC; Tested on Ubuntu 15.10

- name: Install apt packages
  apt: pkg={{item}} state=installed
  with_items:
    - byobu
    - calibre
    - chromium-browser
    - curl
    - fabric
    - flashplugin-installer
    - geany
    - gimp
    - git
    - gksu
    - gnucash
    - htop
    - icedtea-plugin
    - inkscape
    - ipython
    - libpq-dev
    - mercurial
    - numlockx
    - pandoc
    - python-dev
    - python-pip
    - python-sphinx
    - rar
    - silversearcher-ag
    - speedcrunch
    - sqlite3
    - ssh
    - subversion
    - synapse
    - synaptic
    - tasksel
    - traceroute
    - tree
    - vim
    - virtualenvwrapper
    - zsh
  become: yes


# ssh
- name: Check link to ~/.ssh
  stat: path=/home/{{userid}}/.ssh
  register: ssh_link

- name: Create link to ~/.ssh
  file: src=/home/{{userid}}/Desktop/work/dot.ssh dest=/home/{{userid}}/.ssh owner={{userid}} group={{userid}} state=link
  when: not ssh_link.stat.exists


# Vim
- name: Check link ~/.vimrc
  stat: path=/home/{{userid}}/.vimrc
  register: vimrc_link

- name: Create link ~/.vimrc
  file: src={{config_base_dir}}/roles/devpc/files/.vimrc dest=/home/{{userid}}/.vimrc owner={{userid}} group={{userid}} state=link
  when: not vimrc_link.stat.exists

- name: Vim - checkout vundle repo
  git: repo=https://github.com/gmarik/vundle.vim.git dest='/home/{{userid}}/.vim/bundle/vundle.vim'

- name: Vim - checkout typescript syntax highlighting
  git: repo=https://github.com/leafgarland/typescript-vim.git dest='/home/{{userid}}/.vim/bundle/typescript-vim.vim'

- name: Check link ~/.vim/colors
  stat: path=/home/{{userid}}/.vim/colors
  register: vimcolors_link

- name: Create link ~/.vim/colors
  file: src={{config_base_dir}}/roles/devpc/files/.vim/colors dest=/home/{{userid}}/.vim/colors owner={{userid}} group={{userid}} state=link
  when: not vimcolors_link.stat.exists

- name: Vim - run bundle install
  command: vim +BundleInstall +qall
  when: not vimcolors_link.stat.exists


# Byobu
- name: Check file ~/.byobu/backend
  stat: path=/home/{{userid}}/.byobu/backend
  register: byobubackend_file

- name: Set byobu backend
  command: byobu-select-backend screen
  when: not byobubackend_file.stat.exists


# Pip
- name: Upgrade Pip to latest
  pip: name=pip state=latest
  become: yes

- name: Install pip packages
  pip: name={{item}}
  with_items:
    - decorator
    - django
    - fabric
    - glances
    - pypandoc
  become: yes


# vcprompt
- name: Check link /usr/local/bin/vcprompt
  stat: path=/usr/local/bin/vcprompt
  register: vcprompt_link

- name: Install vcprompt
  file: src={{config_base_dir}}/roles/devpc/files/vcprompt dest=/usr/local/bin/vcprompt state=link
  when: not vcprompt_link.stat.exists
  become: yes

- name: Check file vcprompt
  stat: path={{config_base_dir}}/roles/devpc/files/vcprompt
  register: vcprompt_file

- name: Make vcprompt executable
  command: chmod a+x {{config_base_dir}}/roles/devpc/files/vcprompt
  when: not vcprompt_file.stat.xoth
  become: yes

# Config files
- name: Populate /etc/hosts
  copy: src={{config_base_dir}}/roles/devpc/files/hosts dest=/etc/hosts mode="u=rw,g=r,o=r"
  become: yes

- name: Check link ~/fabfile.py
  stat: path=//home/{{userid}}/fabfile.py
  register: fabfile_link

- name: Create link ~/fabfile.py
  file: src={{config_base_dir}}/roles/devpc/files/fabfile.py dest=/home/{{userid}}/fabfile.py state=link
  when: not fabfile_link.stat.exists

- name: Check link ~/.psqlrc
  stat: path=//home/{{userid}}/.psqlrc
  register: psqlrc_link

- name: Create link ~/.psqlrc
  file: src={{config_base_dir}}/roles/devpc/files/.psqlrc dest=/home/{{userid}}/.psqlrc state=link
  when: not psqlrc_link.stat.exists

- name: Check link ~/.my.cnf
  stat: path=//home/{{userid}}/.my.cnf
  register: my_cnf_link

- name: Create link ~/.my.cnf
  file: src={{config_base_dir}}/roles/devpc/files/.my.cnf dest=/home/{{userid}}/.my.cnf state=link
  when: not my_cnf_link.stat.exists

- name: Check link ~/.gitconfig
  stat: path=//home/{{userid}}/.gitconfig
  register: gitconfig_link

- name: Create link ~/.gitconfig
  file: src={{config_base_dir}}/roles/devpc/files/.gitconfig dest=/home/{{userid}}/.gitconfig state=link
  when: not gitconfig_link.stat.exists

# Setup zshrc
- name: Check link ~/.zshrc
  stat: path=//home/{{userid}}/.zshrc
  register: zshrc_link

- name: Create link ~/.zshrc
  file: src={{config_base_dir}}/roles/devpc/files/.zshrc dest=/home/{{userid}}/.zshrc state=link
  when: not zshrc_link.stat.exists

- name: Set zsh as default shell
  user: name={{userid}} shell=/usr/bin/zsh
  become: yes

- name: Populate ~/.zsh_history
  copy: src={{config_base_dir}}/roles/devpc/files/.zsh_history dest=/home/{{userid}}/.zsh_history force=no

- name: Checkout typescript syntax highlighting
  git: repo=https://github.com/zsh-users/zsh-syntax-highlighting.git dest='/usr/local/share/'
  become: yes

# Install Pycharm
- name: Add Pycharm repository
  apt_repository: repo='ppa:mystic-mirage/pycharm'
  become: yes

- name: Install pycharm package (long running)
  apt: pkg=pycharm state=installed
  become: yes

# Initialise Unity Launcher
- name: Populate Unity Launcher
  command: gsettings set com.canonical.Unity.Launcher favorites "['application://firefox.desktop', 'application://byobu.desktop', 'application://jetbrains-pycharm.desktop', 'application://org.gnome.Nautilus.desktop', 'application://geany.desktop', 'application://speedcrunch.desktop', 'application://gnucash.desktop', 'application://libprs500.desktop', 'application://thunderbird.desktop', 'application://chromium-browser.desktop', 'application://unity-control-center.desktop', 'application://steam.desktop', 'unity://running-apps', 'unity://expo-icon', 'unity://devices']"
